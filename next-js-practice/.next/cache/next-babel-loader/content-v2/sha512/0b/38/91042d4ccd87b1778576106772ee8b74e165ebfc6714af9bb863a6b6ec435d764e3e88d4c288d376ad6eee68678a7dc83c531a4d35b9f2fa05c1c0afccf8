{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Cheyoon\\\\code\\\\study\\\\react\\\\next-js-practice\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst Homepage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async () => {\n  //fetch Data from API\n  const client = await MongoClient.connect(process.env.MONGODB_CLUSTER);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close().then(); //close server before return\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n};\nexport default Homepage;","map":{"version":3,"sources":["C:/Users/Cheyoon/code/study/react/next-js-practice/pages/index.js"],"names":["MongoClient","Head","MeetupList","Homepage","props","meetups","getStaticProps","client","connect","process","env","MONGODB_CLUSTER","db","meetupsCollection","collection","find","toArray","close","then","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF;AAAA,kBADF;AAKD,CAND;;AAQA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBC,OAAO,CAACC,GAAR,CAAYC,eAAhC,CAArB;AACA,QAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAA1B;AAEA,QAAMT,OAAO,GAAG,MAAMQ,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP,GAAeC,IAAf,GARwC,CAQjB;;AAEvB,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACc,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD,CArBM;AAuBP,eAAexB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst Homepage = (props) => {\n  return (\n    <>\n      <MeetupList meetups={props.meetups} />;\n    </>\n  );\n};\n\nexport const getStaticProps = async () => {\n  //fetch Data from API\n  const client = await MongoClient.connect(process.env.MONGODB_CLUSTER);\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetup\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close().then(); //close server before return\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  };\n};\n\nexport default Homepage;\n"]},"metadata":{},"sourceType":"module"}